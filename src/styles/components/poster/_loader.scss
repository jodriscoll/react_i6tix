$blockSize: 1.5em;

// Play with these to see what you get
$delay: .065s;
$duration: 1s;
$startingColorDesktop: #666666;
$endingColorDesktop: #666666;

$startingColorMobile: #333333;
$endingColorMobile: #fdfdfd;

// Calculate some values
$blockMargin: $blockSize / 3;
$loaderSize: $blockSize * 3 + $blockMargin * 2;

@mixin translate( $x:0, $y:0 ) {
  transform: translate($x,$y);
}

@mixin animation-delay( $delay ) {
  animation-delay: $delay;
  -webkit-animation-delay: $delay;
}

// Official syntax supported by IE10, FF16, Opera 12.1,
// so we're only going to add the webkit prefix
@mixin animation( $ani1:null, $ani2:null ) {
  @if ($ani2 != null) {
    -webkit-animation: $ani1, $ani2;
    animation: $ani1, $ani2;
  }
  
  @else if ($ani1 != null) {
    -webkit-animation: $ani1;
    animation: $ani1;
  }
}

&-loader {
  position: absolute;
  top: 50%;
  left: 50%;
  width: $loaderSize;
  height: $loaderSize;
  margin-left: -$loaderSize/2;
  margin-top: -$loaderSize/2;
  display: none;

  .loader-block {
    position: absolute;
    top: 0;
    left: 0;
    display: inline-block;
    opacity: 0;
    width: $blockSize;
    height: $blockSize;
    @include animation(show $duration step-end infinite alternate,
      pulse $duration linear infinite alternate);
  }

  @include media-breakpoint-up(md) {
    .loader-block {
      background: $startingColorDesktop;
    }
  }

  @include media-breakpoint-down(sm) {
    .loader-block {
      background: $startingColorMobile;
    }
  }
  
  // Second
  .loader-block:nth-child(1) {
    @include translate(0, 0);
    @include animation-delay(0 * $delay);
  }
  
  // Ninth
  .loader-block:nth-child(2) {
    @include translate($blockSize + $blockMargin, 0);
    @include animation-delay(1 * $delay);
  }
  
  // Fourth
  .loader-block:nth-child(3) {
    @include translate(($blockSize * 2) + ($blockMargin * 2), 0);
    @include animation-delay(2 * $delay);
  }
  
  // Sixth
  .loader-block:nth-child(4) {
    @include translate(0, $blockSize + $blockMargin);
    @include animation-delay(4 * $delay);
  }
  
  // Third
  .loader-block:nth-child(5) {
    @include translate($blockSize + $blockMargin, $blockSize + $blockMargin);
    @include animation-delay(1 * $delay);
  }
  
  // Eighth
  .loader-block:nth-child(6) {
    @include translate(($blockSize * 2) + ($blockMargin * 2), $blockSize + $blockMargin);
    @include animation-delay(6 * $delay);
  }
  
  // Seventh
  .loader-block:nth-child(7) {
    @include translate(0, ($blockSize * 2) + ($blockMargin * 2));
    @include animation-delay(5 * $delay);
  }
  
  // Fifth
  .loader-block:nth-child(8) {
    @include translate($blockSize + $blockMargin, ($blockSize * 2) + ($blockMargin * 2));
    @include animation-delay(3 * $delay);
  }
  
  // First
  .loader-block:nth-child(9) {
    @include translate(($blockSize * 2) + ($blockMargin * 2), ($blockSize * 2) + ($blockMargin * 2));
  }

}

@include media-breakpoint-up(md) {

  @-webkit-keyframes pulse {
    from,
    40% { 
      background: $startingColorDesktop;
    }
    to {
      background: $endingColorDesktop;
    }
  }
  
  @keyframes pulse {
    from,
    40% { 
      background: $startingColorDesktop;
    }
    to {
      background: $endingColorDesktop;
    }
  }

}

@include media-breakpoint-down(sm) {

  @-webkit-keyframes pulse {
    from,
    40% { 
      background: $startingColorMobile;
    }
    to {
      background: $endingColorMobile;
    }
  }
  
  @keyframes pulse {
    from,
    40% { 
      background: $startingColorMobile;
    }
    to {
      background: $endingColorMobile;
    }
  }

}



@-webkit-keyframes show {
  from, 40% { opacity: 0; }
  41%, to { opacity: 1; }
}

@keyframes show {
  from, 40% { opacity: 0; }
  41%, to { opacity: 1; }
}